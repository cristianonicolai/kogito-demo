# Quarkus
quarkus.http.port=8082
quarkus.container-image.group=org.kie.kogito.demo
quarkus.swagger-ui.always-include=true

# Kafka
mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-kafka
mp.messaging.incoming.kogito_incoming_stream.topic=shipping
mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.kogito_incoming_stream.group.id=kogito-shipping-process
mp.messaging.incoming.kogito_incoming_stream.auto.offset.reset=earliest

mp.messaging.outgoing.kogito_outgoing_stream.connector=smallrye-kafka
mp.messaging.outgoing.kogito_outgoing_stream.topic=shipping_completed
mp.messaging.outgoing.kogito_outgoing_stream.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.kogito_outgoing_stream.group.id=kogito-shipping-process
mp.messaging.outgoing.kogito_outgoing_stream.auto.offset.reset=earliest

kafka.security.protocol=SASL_SSL
kafka.sasl.mechanism=OAUTHBEARER
kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
  oauth.client.id="${CLIENT_ID}" \
  oauth.client.secret="${CLIENT_SECRET}" \
  oauth.token.endpoint.uri="${OAUTH_TOKEN_ENDPOINT_URI}" ;
kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler

%dev.kafka.security.protocol=PLAINTEXT
%dev.kafka.sasl.jaas.config=
%dev.kafka.bootstrap.servers=localhost:9092
